version: '3.8'

services:
  app:
    container_name: auth-management-service-api
    hostname: auth-service-api
    build:
      context: .
      dockerfile: Dockerfile
    command: 'php artisan serve --host=0.0.0.0'
    volumes:
      - .:/app
    ports:
      - 8002:8000
    depends_on:
      - database
      # - kong
    networks:
      - kong-network

  database:
    container_name: auth-management-service-database
    restart: always
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - './local/postgresql/:/var/lib/postgresql/data'
    ports:
      - ${DB_PORT}:5432
    networks:
      - kong-network

  # kong-database:
  #   container_name: kong-database
  #   restart: always
  #   image: 'postgres:latest'
  #   environment:
  #     POSTGRES_DB: ${KONG_DB}
  #     POSTGRES_USER: ${KONG_DB_USERNAME}
  #     POSTGRES_PASSWORD: ${KONG_DB_PASSWORD}
  #   volumes:
  #     - './local/api-gateway/:/var/lib/postgresql/data'
  #   ports:
  #     - ${KONG_DB_PORT}:5432
  #   networks:
  #     - kong-network

  # kong:
  #   image: 'kong:latest'
  #   container_name: kong
  #   restart: always
  #   environment:
  #     KONG_DATABASE: 'postgres'
  #     KONG_PG_HOST: ${KONG_DB_HOST}
  #     KONG_PG_USER: ${KONG_DB_USERNAME}
  #     KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
  #     KONG_PG_DATABASE: ${KONG_DB}
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  #   ports:
  #     - 8000:8000
  #     - 8443:8443
  #     - 8001:8001
  #     - 8444:8444
  #   depends_on:
  #     - kong-database
  #   networks:
  #     - kong-network

networks:
  kong-network:
    driver: bridge
